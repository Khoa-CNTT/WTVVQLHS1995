import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import styles from './DashboardPage.module.css';
import UsersManagerPage from './UsersManager/UsersManager';

function Dashboard() {
  const navigate = useNavigate();
  const [activeMenu, setActiveMenu] = useState('t·ªïng-quan');
  const [statCounts, setStatCounts] = useState({
    documents: 0,
    cases: 0,
    appointments: 0,
    contracts: 0
  });
  const [notifications, setNotifications] = useState(3);
  const [menuVisible, setMenuVisible] = useState(true);

  // M√¥ ph·ªèng hi·ªáu ·ª©ng ƒë·∫øm s·ªë m∆∞·ª£t h∆°n
  useEffect(() => {
    const targetCounts = { documents: 15, cases: 5, appointments: 3, contracts: 2 };
    const duration = 1500; // ms
    const frameDuration = 1000 / 60; // 60 fps
    const totalFrames = Math.round(duration / frameDuration);

    let frame = 0;
    const timer = setInterval(() => {
      frame++;
      const progress = frame / totalFrames;
      const updatedCounts = {};

      Object.keys(targetCounts).forEach(key => {
        updatedCounts[key] = Math.floor(progress * targetCounts[key]);
        if (frame === totalFrames) {
          updatedCounts[key] = targetCounts[key];
        }
      });

      setStatCounts(updatedCounts);

      if (frame === totalFrames) {
        clearInterval(timer);
      }
    }, frameDuration);

    return () => clearInterval(timer);
  }, []);

  // H√†m chuy·ªÉn ƒë·∫øn trang ch·ªß
  const goToHomePage = () => {
    navigate('/');
  };

  // H√†m toggle sidebar
  const toggleSidebar = () => {
    setMenuVisible(!menuVisible);
  };

  // Danh s√°ch menu d·ª±a tr√™n c·∫•u tr√∫c c∆° s·ªü d·ªØ li·ªáu
  const menuItems = [
    { id: 't·ªïng-quan', label: 'T·ªïng Quan', icon: '‚öñÔ∏è' },
    { id: 'ng∆∞·ªùi-d√πng', label: 'T√†i Kho·∫£n', icon: 'üë®‚Äç‚öñÔ∏è', table: 'Users, UserProfiles' },
    { id: 't√†i-li·ªáu-ph√°p-l√Ω', label: 'T√†i Li·ªáu Ph√°p L√Ω', icon: 'üìú', table: 'LegalDocuments, DocumentTemplates' },
    { id: 'v·ª•-√°n', label: 'V·ª• √Ån Ph√°p L√Ω', icon: 'üèõÔ∏è', table: 'LegalCases' },
    { id: 'h·ª£p-ƒë·ªìng', label: 'H·ª£p ƒê·ªìng', icon: 'üìã', table: 'Contracts, DigitalSignatures' },
    { id: 'l·ªãch-h·∫πn', label: 'L·ªãch H·∫πn', icon: 'üìÖ', table: 'Appointments, LawyerAvailability' },
    { id: 't∆∞-v·∫•n-ai', label: 'T∆∞ V·∫•n AI', icon: 'ü§ñ', table: 'AIConsultations' },
    { id: 'tin-nh·∫Øn', label: 'Tin Nh·∫Øn', icon: 'üí¨', table: 'LiveChats' },
    { id: 'giao-d·ªãch', label: 'Giao D·ªãch', icon: 'üí∞', table: 'Transactions, FeeReferences' }
  ];

  // N·ªôi dung gi·∫£ l·∫≠p cho T·ªïng Quan
  const renderDashboardOverview = () => {
    return (
      <>
        <h2 className={styles.sectionTitle}>T·ªïng Quan Ho·∫°t ƒê·ªông</h2>
        <div className={styles.legalQuote}>
          "C√¥ng l√Ω kh√¥ng ch·ªâ ph·∫£i ƒë∆∞·ª£c th·ª±c thi, m√† c√≤n ph·∫£i ƒë∆∞·ª£c nh√¨n th·∫•y l√† ƒëang ƒë∆∞·ª£c th·ª±c thi"
        </div>

        <div className={styles.cardGrid}>
          <div className={styles.card}>
            <div className={styles.cardTitle}>
              <span className={styles.legalIcon}>üìÑ</span>
              T√†i Li·ªáu Ph√°p L√Ω
            </div>
            <div className={styles.cardContent}>
              <p><span className={styles.statNumber}>{statCounts.documents}</span> t√†i li·ªáu m·ªõi ƒë∆∞·ª£c c·∫≠p nh·∫≠t</p>
              <small>VƒÉn b·∫£n, lu·∫≠t, ngh·ªã ƒë·ªãnh, m·∫´u h·ª£p ƒë·ªìng</small>
            </div>
            <button className={styles.actionButton} onClick={() => setActiveMenu('t√†i-li·ªáu-ph√°p-l√Ω')}>
              Xem Chi Ti·∫øt <span>‚Üí</span>
            </button>
          </div>

          <div className={styles.card}>
            <div className={styles.cardTitle}>
              <span className={styles.legalIcon}>‚öñÔ∏è</span>
              V·ª• √Ån ƒêang X·ª≠ L√Ω
            </div>
            <div className={styles.cardContent}>
              <p><span className={styles.statNumber}>{statCounts.cases}</span> v·ª• √°n ƒëang ch·ªù x·ª≠ l√Ω</p>
              <small>C√°c v·ª• √°n ph√°p l√Ω ƒëang ƒë∆∞·ª£c theo d√µi v√† x·ª≠ l√Ω</small>
            </div>
            <button className={styles.actionButton} onClick={() => setActiveMenu('v·ª•-√°n')}>
              Xem Chi Ti·∫øt <span>‚Üí</span>
            </button>
          </div>

          <div className={styles.card}>
            <div className={styles.cardTitle}>
              <span className={styles.legalIcon}>üìÖ</span>
              L·ªãch H·∫πn S·∫Øp T·ªõi
            </div>
            <div className={styles.cardContent}>
              <p><span className={styles.statNumber}>{statCounts.appointments}</span> cu·ªôc h·∫πn trong tu·∫ßn n√†y</p>
              <small>C√°c cu·ªôc h·∫πn t∆∞ v·∫•n v·ªõi lu·∫≠t s∆∞ ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t l·ªãch</small>
            </div>
            <button className={styles.actionButton} onClick={() => setActiveMenu('l·ªãch-h·∫πn')}>
              Xem Chi Ti·∫øt <span>‚Üí</span>
            </button>
          </div>

          <div className={styles.card}>
            <div className={styles.cardTitle}>
              <span className={styles.legalIcon}>üìã</span>
              H·ª£p ƒê·ªìng M·ªõi
            </div>
            <div className={styles.cardContent}>
              <p><span className={styles.statNumber}>{statCounts.contracts}</span> h·ª£p ƒë·ªìng c·∫ßn xem x√©t</p>
              <small>C√°c h·ª£p ƒë·ªìng m·ªõi c·∫ßn xem x√©t v√† k√Ω k·∫øt</small>
            </div>
            <button className={styles.actionButton} onClick={() => setActiveMenu('h·ª£p-ƒë·ªìng')}>
              Xem Chi Ti·∫øt <span>‚Üí</span>
            </button>
          </div>
        </div>

        <div className={styles.legalDivider}></div>

        <h2 className={styles.sectionTitle}>Ho·∫°t ƒê·ªông G·∫ßn ƒê√¢y</h2>
        <div className={styles.recentActivities}>
          <div className={styles.activityItem}>
            <span className={styles.activityIcon}>üìù</span>
            <div className={styles.activityContent}>
              <div className={styles.activityTitle}>T√†i li·ªáu ph√°p l√Ω "Lu·∫≠t doanh nghi·ªáp 2023" ƒë∆∞·ª£c th√™m v√†o</div>
              <div className={styles.activityTime}>2 gi·ªù tr∆∞·ªõc</div>
            </div>
          </div>
          <div className={styles.activityItem}>
            <span className={styles.activityIcon}>üë®‚Äç‚öñÔ∏è</span>
            <div className={styles.activityContent}>
              <div className={styles.activityTitle}>Cu·ªôc h·∫πn v·ªõi Lu·∫≠t s∆∞ Nguy·ªÖn VƒÉn A v·ªÅ v·ª• √°n kinh doanh</div>
              <div className={styles.activityTime}>H√¥m qua, 15:30</div>
            </div>
          </div>
          <div className={styles.activityItem}>
            <span className={styles.activityIcon}>üí∞</span>
            <div className={styles.activityContent}>
              <div className={styles.activityTitle}>Giao d·ªãch thanh to√°n t∆∞ v·∫•n lu·∫≠t s·ª± ho√†n t·∫•t - 2.500.000ƒë</div>
              <div className={styles.activityTime}>3 ng√†y tr∆∞·ªõc</div>
            </div>
          </div>
          <div className={styles.activityItem}>
            <span className={styles.activityIcon}>üìã</span>
            <div className={styles.activityContent}>
              <div className={styles.activityTitle}>H·ª£p ƒë·ªìng mua b√°n ƒë√£ ƒë∆∞·ª£c k√Ω k·∫øt v·ªõi ch·ªØ k√Ω ƒëi·ªán t·ª≠</div>
              <div className={styles.activityTime}>5 ng√†y tr∆∞·ªõc</div>
            </div>
          </div>
        </div>
      </>
    );
  };

  // N·ªôi dung cho ph·∫ßn t√†i kho·∫£n d·ª±a v√†o b·∫£ng Users v√† UserProfiles
  const renderUserProfile = () => {
    return (
      <>
        <h2 className={styles.sectionTitle}>Qu·∫£n l√Ω t√†i kho·∫£n ng∆∞·ªùi d√πng</h2>
        <UsersManagerPage />
      </>
    );
  };

  // Hi·ªÉn th·ªã n·ªôi dung t∆∞∆°ng ·ª©ng v·ªõi menu ƒë∆∞·ª£c ch·ªçn
  const renderContent = () => {
    switch (activeMenu) {
      case 't·ªïng-quan':
        return <div className={styles.contentSection}>{renderDashboardOverview()}</div>;
      case 'ng∆∞·ªùi-d√πng':
        return (
          <div className={styles.contentSection}>
            {renderUserProfile()}
          </div>
        );
      case 't√†i-li·ªáu-ph√°p-l√Ω':
        return (
          <div className={styles.contentSection}>
            <h2 className={styles.sectionTitle}>T√†i Li·ªáu Ph√°p L√Ω</h2>
          </div>
        );
      case 'v·ª•-√°n':
        return (
          <div className={styles.contentSection}>
            <h2 className={styles.sectionTitle}>V·ª• √Ån Ph√°p L√Ω</h2>
          </div>
        );
      case 'h·ª£p-ƒë·ªìng':
        return (
          <div className={styles.contentSection}>
            <h2 className={styles.sectionTitle}>Qu·∫£n L√Ω H·ª£p ƒê·ªìng</h2>
          </div>
        );
      case 'l·ªãch-h·∫πn':
        return (
          <div className={styles.contentSection}>
            <h2 className={styles.sectionTitle}>L·ªãch H·∫πn</h2>
          </div>
        );
      case 't∆∞-v·∫•n-ai':
        return (
          <div className={styles.contentSection}>
            <h2 className={styles.sectionTitle}>T∆∞ V·∫•n AI</h2>
          </div>
        );
      case 'tin-nh·∫Øn':
        return (
          <div className={styles.contentSection}>
            <h2 className={styles.sectionTitle}>Tin Nh·∫Øn</h2>
          </div>
        );
      case 'giao-d·ªãch':
        return (
          <div className={styles.contentSection}>
            <h2 className={styles.sectionTitle}>Giao D·ªãch</h2>
          </div>
        );
      default:
        return <div className={styles.contentSection}>Ch·ªçn m·ªôt m·ª•c t·ª´ menu</div>;
    }
  };

  const getCurrentDate = () => {
    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
    return new Date().toLocaleDateString('vi-VN', options);
  };

  return (
    <div className={styles.dashboardContainer}>
      {/* Sidebar */}
      <div className={`${styles.sidebar} ${!menuVisible ? styles.sidebarCollapsed : ''}`}>
        <div
          className={styles.logoContainer}
          onClick={goToHomePage}
          title="V·ªÅ trang ch·ªß"
        >
          <h2>LegAI</h2>
        </div>
        <div className={styles.menuContainer}>
          {menuItems.map(item => (
            <div
              key={item.id}
              className={`${styles.menuItem} ${activeMenu === item.id ? styles.active : ''}`}
              onClick={() => setActiveMenu(item.id)}
              title={item.table ? `B·∫£ng d·ªØ li·ªáu: ${item.table}` : item.label}
            >
              <span className={styles.menuIcon}>{item.icon}</span>
              {menuVisible && <span className={styles.menuLabel}>{item.label}</span>}
            </div>
          ))}
        </div>
        <div className={styles.logoutContainer}>
          <button className={styles.logoutButton} onClick={() => localStorage.removeItem('token')}>
            üö™ {menuVisible ? 'ƒêƒÉng xu·∫•t' : ''}
          </button>
        </div>
      </div>

      {/* Toggle Button for Sidebar - ƒë·∫∑t b√™n ngo√†i sidebar */}
      <button className={styles.menuToggle} onClick={toggleSidebar}>
        {menuVisible ? '‚óÄ' : '‚ñ∂'}
      </button>

      {/* Main Content */}
      <div className={styles.mainContent}>
        <div className={styles.header}>
          <div>
            <h1>H·ªÜ TH·ªêNG QU·∫¢N L√ù PH√ÅP L√ù</h1>
            <div className={styles.currentDate}>{getCurrentDate()}</div>
          </div>
          <div className={styles.userInfo}>
            <div className={styles.notifications}>
              <span className={styles.notificationIcon}>üîî</span>
              {notifications > 0 && <span className={styles.notificationBadge}>{notifications}</span>}
            </div>
            <span className={styles.userName}>NGUY·ªÑN VƒÇN A</span>
            <div className={styles.userAvatar}>NV</div>
          </div>
        </div>
        <div className={styles.contentWrapper}>
          {renderContent()}
        </div>
      </div>
    </div>
  );
}

export default Dashboard;